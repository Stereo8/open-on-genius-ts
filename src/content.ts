import * as Browser from 'webextension-polyfill'

let titleElement = null
let songTitle = ''
let button: HTMLImageElement = null

async function onButtonClick() {
  button.classList.add('spinning')
  let artistName = undefined
  if (
    document
      .querySelector('div.ytd-video-secondary-info-renderer#description')
      .innerHTML.includes('Auto-generated by YouTube.')
  ) {
    artistName = document.querySelector('ytd-channel-name a').innerHTML
  }
  await Browser.runtime.sendMessage({
    songTitle,
    ...(artistName && { artistName }),
  })
}

async function mountButton() {
  const container = document.createElement('div')
  container.id = 'open-on-genius-container'

  button = document.createElement('img')
  button.src = Browser.runtime.getURL('images/genius.png')
  button.id = 'open-on-genius-button'

  const openText = document.createElement('span')
  openText.textContent = 'Open on Genius'
  openText.id = 'open-on-genius-text'

  container.appendChild(button)
  container.appendChild(openText)
  container.onclick = onButtonClick

  titleElement.parentNode.appendChild(container)
}

function messageListener(message) {
  console.log(message)
  if (message?.shake) {
    const div = document.querySelector('#open-on-genius-container')
    div.classList.add('shaking')
    setTimeout(() => {
      div.classList.remove('shaking')
      button.classList.remove('spinning')
    }, 1000)
  } else if (message?.stopSpin) {
    button.classList.remove('spinning')
  }
}

// Waits for SPA to render to get song title
const intervalID = setInterval(async () => {
  titleElement = document.querySelector('h1.title > yt-formatted-string')
  songTitle = titleElement?.innerHTML

  if (songTitle) {
    // Looks for changes to the song title that happen on SPA navigation
    new MutationObserver(() => {
      songTitle = titleElement?.innerHTML
    }).observe(titleElement, {
      subtree: true,
      childList: true,
    })

    console.log(songTitle)
    await mountButton()

    clearInterval(intervalID)
  }
}, 200)

Browser.runtime.onMessage.addListener(messageListener)
